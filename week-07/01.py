'''
UZ

[46, 57, 138, 34, 178, 113, 228, 66, 68, 113, 36, 121, 71, 227, 210, 183, 190, 219, 80, 209, 151, 235, 135, 121, 109, 178, 134, 149, 0, 243, 34, 222, 229, 108, 10, 62, 17, 194, 111, 157, 218, 212, 62, 68, 20, 162, 251, 19, 145, 162, 77, 188, 7, 127, 202, 13, 3, 84, 159, 85, 39, 227, 178, 40, 45, 129, 42, 188, 123, 251, 95, 90, 113, 51, 113, 87, 252, 206, 191, 187, 198, 93, 216, 149, 236, 139, 125, 101, 168, 143, 147, 2, 232, 42, 199, 243, 127, 15, 62, 27, 216, 97, 128, 216, 213, 50, 84, 14, 166, 238, 12, 157, 186, 64, 174, 30, 109, 207, 11, 1, 84, 159, 86, 34, 237, 188, 47, 44, 142, 50, 166, 97, 225, 72, 77, 113, 39, 113, 71, 234, 218, 179, 168, 197, 80, 214, 134, 229, 137, 102, 102, 178, 136, 143, 27, 243, 37, 216, 229, 117, 9, 44, 0, 194, 107, 131, 222, 198, 58, 81, 22, 168, 253, 23, 153, 184, 74, 182, 6, 101, 205, 6, 15, 77, 131, 83, 34, 245, 184, 43, 49, 129, 44, 172, 126, 251, 72, 93, 125, 53, 117, 65, 253, 210, 177, 189, 221, 88, 218, 158, 237, 155, 103, 112, 160, 144, 143, 6, 232, 38, 210, 255, 114, 7, 47, 29, 197, 105, 145, 217, 210, 60, 69, 27, 186, 235, 21, 150, 184, 88, 180, 24, 103, 194, 11, 29, 88, 130, 64, 59, 231, 170, 55, 34, 145, 32, 188, 105, 251, 70, 76, 116, 51, 113, 88, 239, 200, 172, 164, 221, 86, 214, 134, 230, 137, 121, 101, 178, 157, 150, 23, 240, 46, 199, 228, 121, 13, 58, 2, 202, 122, 134, 214, 203, 52, 72, 27, 185, 247, 12, 147, 180, 83, 188, 3, 101, 213, 7, 7, 89, 141, 78, 46, 234, 176, 58, 42, 151, 51, 180, 97, 245, 76, 72, 108, 36, 121, 70, 239, 208, 170, 167, 206, 88, 203, 149, 240, 134, 117, 113, 181, 149, 139, 25, 240, 32, 196, 224, 121, 10, 43, 7, 194, 105, 149, 192, 204, 60, 64, 14, 187, 255, 19, 151, 162, 73, 188, 24, 104, 194, 20, 11, 87, 141, 66, 57, 239, 172, 45, 34, 133, 50, 190, 123, 230, 68, 76, 116, 57, 121, 91, 229, 218, 170, 170, 221, 88, 202, 144, 227, 133, 117, 99, 179, 149, 133, 20, 243, 46, 196, 255, 105, 28, 44, 6, 202, 108, 159, 195, 198, 33, 87, 31, 187, 253, 23, 153, 187, 80, 180, 24, 122, 202, 17, 1, 78, 150, 80, 61, 255, 170, 43, 34, 158, 62, 167, 105, 243, 67, 93, 114, 56, 99]
'''


def	xor(a,b):
    m=min(len(a),len(b))
    return [(a[i]+b[i])%2 for i in range(0,m)] 	

def trf(M,i,lin):
    for j in lin:
	    M[j]=xor(M[i],M[j])
    #for j in range(len(M)):
    #    print (M[j])
    return M  
  
def shift(c,x): # c - coefficients, x - initial state, len(c)=len(x)
    bt=0
    n=len(x)
    xf=[0]*n
    for j in range(0,n):
        bt+=c[j]*x[j]
    for j in range(1,n):
        xf[n-j]=x[n-1-j]
    xf[0]=bt%2
    return xf 

def stream(c,xp,n):  # key stream
    x=[0,0,0,0,0,0,0,0]
    for i in range(0,8):
        x[i]=xp[i]
    sr=''
    for i in range(0,n):
        sr+=str(x[0])
        x=shift(c,x)
    return sr

# 46 = U - 8 bitu seka
# bin(ord('U')^^46)
# '0b01111011'

# 57 = Z - 8 bitu seka
# bin(ord('Z')^^57)
# '0b01100011'

'''
    '01111011 01100011'
    [[0,1,1,1,0,1,1,0],
    [1,1,1,0,1,1,0,1],
    [1,1,0,1,1,0,1,1],
    [1,0,1,1,0,1,1,0],
    [0,1,1,0,1,1,0,0],
    [1,1,0,1,1,0,0,0],
    [1,0,1,1,0,0,0,1],
    [0,1,1,0,0,0,1,1]]
'''

#M = [
  #  [1,1,1,0,1,1,0,1],
 #   [0,1,1,1,0,1,1,0],
 #   [1,1,0,1,1,0,1,1],
 #   [1,0,1,1,0,1,1,0],
 #   [0,1,1,0,1,1,0,0],
 #   [1,1,0,1,1,0,0,0],
 #   [1,0,1,1,0,0,0,1],
 #   [0,1,1,0,0,0,1,1]]

#trf(M, 0, [2, 3, 4, 6, 7])
#trf(M, 0, [2, 3, 4, 6, 7])


M = [
    [1, 1, 1, 1, 0, 1, 1, 0, 1], # c8 = c7 + c6 + c5 + c3 + c2 + 1 = 1 - visada lygus vienam! bet galima patikrinti
    [0, 1, 1, 1, 1, 0, 1, 1, 0], # c7 = c1 + c2 + c4 + c5 + c6 = 1
    [0, 0, 1, 0, 1, 1, 0, 1, 1], # c6 = 1 + c4 + c3+ c1 = 1
    [0, 0, 0, 1, 1, 0, 1, 1, 0], # c5 = c4 + c2 + c1 = 1
    [0, 0, 0, 0, 1, 1, 0, 1, 0], # c4 = c3 + c1 = 0
    [0, 0, 0, 0, 0, 1, 1, 1, 1], # c3 = 1 + c1 + c2 = 0
    [0, 0, 0, 0, 0, 0, 1, 1, 1], # c1 + c2 = 1 => c2 = 1
    [0, 0, 0, 0, 0, 0, 0, 1, 0]  # c1 = 0
]

c = [0, 1, 0, 0, 1, 1, 1, 1] # konst

stream(c ,c, 16)

xp = [1, 1, 1, 1 ,0, 1, 1, 0] # pradine padetis
xp = xp[::-1]
xp = [0, 1, 1, 0, 1, 1, 1, 1]

# desifruojam [57, 138]
k=stream(c, xp, 16)
sf = [57, 138, 34, 178, 113, 228, 66, 68, 113, 36, 121, 71, 227, 210, 183, 190, 219, 80, 209, 151, 235, 135, 121, 109, 178, 134, 149, 0, 243, 34, 222, 229, 108, 10, 62, 17, 194, 111, 157, 218, 212, 62, 68, 20, 162, 251, 19, 145, 162, 77, 188, 7, 127, 202, 13, 3, 84, 159, 85, 39, 227, 178, 40, 45, 129, 42, 188, 123, 251, 95, 90, 113, 51, 113, 87, 252, 206, 191, 187, 198, 93, 216, 149, 236, 139, 125, 101, 168, 143, 147, 2, 232, 42, 199, 243, 127, 15, 62, 27, 216, 97, 128, 216, 213, 50, 84, 14, 166, 238, 12, 157, 186, 64, 174, 30, 109, 207, 11, 1, 84, 159, 86, 34, 237, 188, 47, 44, 142, 50, 166, 97, 225, 72, 77, 113, 39, 113, 71, 234, 218, 179, 168, 197, 80, 214, 134, 229, 137, 102, 102, 178, 136, 143, 27, 243, 37, 216, 229, 117, 9, 44, 0, 194, 107, 131, 222, 198, 58, 81, 22, 168, 253, 23, 153, 184, 74, 182, 6, 101, 205, 6, 15, 77, 131, 83, 34, 245, 184, 43, 49, 129, 44, 172, 126, 251, 72, 93, 125, 53, 117, 65, 253, 210, 177, 189, 221, 88, 218, 158, 237, 155, 103, 112, 160, 144, 143, 6, 232, 38, 210, 255, 114, 7, 47, 29, 197, 105, 145, 217, 210, 60, 69, 27, 186, 235, 21, 150, 184, 88, 180, 24, 103, 194, 11, 29, 88, 130, 64, 59, 231, 170, 55, 34, 145, 32, 188, 105, 251, 70, 76, 116, 51, 113, 88, 239, 200, 172, 164, 221, 86, 214, 134, 230, 137, 121, 101, 178, 157, 150, 23, 240, 46, 199, 228, 121, 13, 58, 2, 202, 122, 134, 214, 203, 52, 72, 27, 185, 247, 12, 147, 180, 83, 188, 3, 101, 213, 7, 7, 89, 141, 78, 46, 234, 176, 58, 42, 151, 51, 180, 97, 245, 76, 72, 108, 36, 121, 70, 239, 208, 170, 167, 206, 88, 203, 149, 240, 134, 117, 113, 181, 149, 139, 25, 240, 32, 196, 224, 121, 10, 43, 7, 194, 105, 149, 192, 204, 60, 64, 14, 187, 255, 19, 151, 162, 73, 188, 24, 104, 194, 20, 11, 87, 141, 66, 57, 239, 172, 45, 34, 133, 50, 190, 123, 230, 68, 76, 116, 57, 121, 91, 229, 218, 170, 170, 221, 88, 202, 144, 227, 133, 117, 99, 179, 149, 133, 20, 243, 46, 196, 255, 105, 28, 44, 6, 202, 108, 159, 195, 198, 33, 87, 31, 187, 253, 23, 153, 187, 80, 180, 24, 122, 202, 17, 1, 78, 150, 80, 61, 255, 170, 43, 34, 158, 62, 167, 105, 243, 67, 93, 114, 56, 99]


num = len(sf)
k = stream(c, xp, num*8)
result = ''
for i in range(0, num):
    start = i*8
    end = i*8+8
    result += chr(int(k[start:end], 2)^^sf[i])
    
result 
    



