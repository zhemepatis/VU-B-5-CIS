# 3. Feistel cipher with three iterations, where the keys are [45, 108, 192]
# Iteration function is (m|k)^((m//16)&k) 
# Initialization vector is [153, 12]
# Decipher cipher made using CFB mode:
# [[28, 185], [35, 28], [174, 36], [15, 142], [7, 38], [163, 13], [32, 167], [14, 15], [129, 45], [49, 136], [47, 57], [153, 15], [28, 178], [55, 0], [165, 53], [24, 146], [14, 53], [179, 14], [47, 189], [4, 13], [155, 33], [59, 158], [55, 50], [134, 30], [2, 184], [57, 29], [172, 35], [14, 146], [27, 42], [178, 23], [47, 191], [26, 11], [150, 37], [34, 151], [36, 42], [155, 10], [0, 187], [50, 15], [174, 32], [23, 142], [15, 41], [179, 6], [42, 187], [29, 28], [153, 60], [57, 149], [60, 55], [146, 12], [14, 176], [61, 11], [183, 52], [8, 146], [9, 48], [185, 25], [32, 175], [6, 29], [144, 49], [45, 156], [53, 34], [140, 21], [5, 164], [45, 1], [185, 52], [7, 152]]

import utils.feistel_scheme as fs

keys = [45, 108, 192]
initialisation_vector = [153, 12]
byte_pairs = [[28, 185], [35, 28], [174, 36], [15, 142], [7, 38], [163, 13], [32, 167], [14, 15], [129, 45], [49, 136], [47, 57], [153, 15], [28, 178], [55, 0], [165, 53], [24, 146], [14, 53], [179, 14], [47, 189], [4, 13], [155, 33], [59, 158], [55, 50], [134, 30], [2, 184], [57, 29], [172, 35], [14, 146], [27, 42], [178, 23], [47, 191], [26, 11], [150, 37], [34, 151], [36, 42], [155, 10], [0, 187], [50, 15], [174, 32], [23, 142], [15, 41], [179, 6], [42, 187], [29, 28], [153, 60], [57, 149], [60, 55], [146, 12], [14, 176], [61, 11], [183, 52], [8, 146], [9, 48], [185, 25], [32, 175], [6, 29], [144, 49], [45, 156], [53, 34], [140, 21], [5, 164], [45, 1], [185, 52], [7, 152]]
func = "(r | key) ^ ((r//16) & key) "

result_str = ""
for pair in byte_pairs:
    l_result, r_result = fs.decrypt_cfb(pair, func, keys, initialisation_vector)
    result_str += chr(l_result) + chr(r_result)

    initialisation_vector = [pair[0], pair[1]]

print(result_str)